From 58992412b0afc66c777583f7925a908f31f11b35 Mon Sep 17 00:00:00 2001
From: KyleWong <kang.wang1988@gmail.com>
Date: Sat, 22 Dec 2018 23:35:01 +0800
Subject: [PATCH] alfpatch:Fix a tap failure problem when double click on
 FlutterViewController

---
 .../framework/Source/FlutterViewController.mm | 74 ++++++++++++++++---
 1 file changed, 65 insertions(+), 9 deletions(-)

diff --git a/shell/platform/darwin/ios/framework/Source/FlutterViewController.mm b/shell/platform/darwin/ios/framework/Source/FlutterViewController.mm
index 9f01c4002..ea8beaaa0 100644
--- a/shell/platform/darwin/ios/framework/Source/FlutterViewController.mm
+++ b/shell/platform/darwin/ios/framework/Source/FlutterViewController.mm
@@ -22,6 +22,8 @@
 #include "flutter/shell/platform/darwin/ios/framework/Source/platform_message_response_darwin.h"
 #include "flutter/shell/platform/darwin/ios/platform_view_ios.h"
 
+static double kTouchTrackerCheckInterval = 1.f;
+
 @implementation FlutterViewController {
   std::unique_ptr<fml::WeakPtrFactory<FlutterViewController>> _weakFactory;
   fml::scoped_nsobject<FlutterEngine> _engine;
@@ -37,6 +39,8 @@ @implementation FlutterViewController {
   BOOL _initialized;
   BOOL _viewOpaque;
   BOOL _engineNeedsLaunch;
+  NSMutableSet* _touchTrackerSet;
+  NSMutableDictionary<NSValue*, NSNumber*>* _touchTrackerDict;
 }
 
 #pragma mark - Manage and override all designated initializers
@@ -113,6 +117,8 @@ - (void)performCommonViewControllerInitialization {
   _orientationPreferences = UIInterfaceOrientationMaskAll;
   _statusBarStyle = UIStatusBarStyleDefault;
 
+  _touchTrackerSet = [[NSMutableSet set] retain];
+  _touchTrackerDict = [[NSMutableDictionary dictionary] retain];
   [self setupNotificationCenterObservers];
 }
 
@@ -429,6 +435,8 @@ - (void)viewDidDisappear:(BOOL)animated {
 
 - (void)dealloc {
   [[NSNotificationCenter defaultCenter] removeObserver:self];
+  [_touchTrackerSet release];
+  [_touchTrackerDict release];
   [super dealloc];
 }
 
@@ -498,18 +506,40 @@ - (void)applicationWillEnterForeground:(NSNotification*)notification {
 // in the status bar area are available to framework code. The change type (optional) of the faked
 // touch is specified in the second argument.
 - (void)dispatchTouches:(NSSet*)touches
-    pointerDataChangeOverride:(blink::PointerData::Change*)overridden_change {
+    pointerDataChangeOverride:(blink::PointerData::Change*)overridden_change
+                 trackTouches:(BOOL)bTrack {
   const CGFloat scale = [UIScreen mainScreen].scale;
   auto packet = std::make_unique<blink::PointerDataPacket>(touches.count);
-
+  NSTimeInterval tsNow = [[NSDate date] timeIntervalSinceReferenceDate];
   size_t pointer_index = 0;
 
   for (UITouch* touch in touches) {
     CGPoint windowCoordinates = [touch locationInView:self.view];
-
+    UITouchPhase phase = touch.phase;
+    NSValue* key = [NSValue valueWithPointer:(void*)touch];
     blink::PointerData pointer_data;
     pointer_data.Clear();
 
+    switch (phase) {
+      case UITouchPhaseBegan:
+      case UITouchPhaseMoved:
+      case UITouchPhaseStationary:
+        if (bTrack) {
+          [_touchTrackerSet addObject:touch];
+          _touchTrackerDict[key] = @(tsNow + kTouchTrackerCheckInterval);
+        }
+        break;
+      case UITouchPhaseEnded:
+      case UITouchPhaseCancelled:
+        if (bTrack) {
+          [_touchTrackerDict removeObjectForKey:key];
+          [_touchTrackerSet removeObject:touch];
+        }
+        break;
+      default:
+        break;
+    }
+
     constexpr int kMicrosecondsPerSecond = 1000 * 1000;
     pointer_data.time_stamp = touch.timestamp * kMicrosecondsPerSecond;
 
@@ -584,19 +614,45 @@ - (void)dispatchTouches:(NSSet*)touches
 }
 
 - (void)touchesBegan:(NSSet*)touches withEvent:(UIEvent*)event {
-  [self dispatchTouches:touches pointerDataChangeOverride:nullptr];
+  [self dispatchTouches:touches pointerDataChangeOverride:nullptr trackTouches:TRUE];
+  [self checkIfCompleteTouches];
 }
 
 - (void)touchesMoved:(NSSet*)touches withEvent:(UIEvent*)event {
-  [self dispatchTouches:touches pointerDataChangeOverride:nullptr];
+  [self dispatchTouches:touches pointerDataChangeOverride:nullptr trackTouches:TRUE];
 }
 
 - (void)touchesEnded:(NSSet*)touches withEvent:(UIEvent*)event {
-  [self dispatchTouches:touches pointerDataChangeOverride:nullptr];
+  [self dispatchTouches:touches pointerDataChangeOverride:nullptr trackTouches:TRUE];
 }
 
 - (void)touchesCancelled:(NSSet*)touches withEvent:(UIEvent*)event {
-  [self dispatchTouches:touches pointerDataChangeOverride:nullptr];
+  [self dispatchTouches:touches pointerDataChangeOverride:nullptr trackTouches:TRUE];
+}
+
+- (BOOL)checkIfCompleteTouches {
+  NSInteger cnt = _touchTrackerSet.count;
+  if (cnt <= 0)
+    return FALSE;
+  NSTimeInterval tsNow = [[NSDate date] timeIntervalSinceReferenceDate];
+  NSSet* tmpTrackingTouches = [_touchTrackerSet copy];
+  NSMutableSet* set = [NSMutableSet set];
+  for (UITouch* touch in tmpTrackingTouches) {
+    NSValue* key = [NSValue valueWithPointer:(void*)touch];
+    NSNumber* expiredTime = [_touchTrackerDict objectForKey:key];
+    if (expiredTime.doubleValue <= tsNow) {
+      [touch setValue:@(UITouchPhaseEnded) forKey:@"phase"];
+      [set addObject:touch];
+      [_touchTrackerDict removeObjectForKey:key];
+      [_touchTrackerSet removeObject:touch];
+    }
+  }
+  if (set.count > 0) {
+    [self dispatchTouches:set pointerDataChangeOverride:nullptr trackTouches:FALSE];
+    [self dispatchTouches:set pointerDataChangeOverride:nullptr trackTouches:FALSE];
+    return TRUE;
+  }
+  return FALSE;
 }
 
 #pragma mark - Handle view resizing
@@ -892,9 +948,9 @@ - (void)handleStatusBarTouches:(UIEvent*)event {
         NSSet* statusbarTouches = [NSSet setWithObject:touch];
 
         blink::PointerData::Change change = blink::PointerData::Change::kDown;
-        [self dispatchTouches:statusbarTouches pointerDataChangeOverride:&change];
+        [self dispatchTouches:statusbarTouches pointerDataChangeOverride:&change trackTouches:TRUE];
         change = blink::PointerData::Change::kUp;
-        [self dispatchTouches:statusbarTouches pointerDataChangeOverride:&change];
+        [self dispatchTouches:statusbarTouches pointerDataChangeOverride:&change trackTouches:TRUE];
         return;
       }
     }
-- 
2.20.1 (Apple Git-117)

